*ftpdev.txt* 			For Vim version 7	Last change: 6 May 2011


		    A help file for <F>ile <T>ype <P>lugin <DEV>elopemnt  (ver. 5.3)
				by Marcin Szamotulski
			    mszamot [AT] gmail [DOT] com
			----------------------------------------

This file type plugin provides some additional functions and commands which
help writing and vim plugins. Especially big ones. Here is the list of
available commands and maps with some explanation:

======
NEWS							*ftpdev-news*	
>
 version 5.5
<
 |ftpdev-:Function|, |ftpdev-:Command|, |ftpdev-:MapLhs|, |ftpdev-:MapRhs| and
 |ftpdev-:Variable| are using location list rather than the quick fix list.
 Use |:llist|, |:lne| and |:lp| vim commands.

 |ftpdev-:S| command is works well when the pattern contains |\v| (but not
 when it mixes |\m|, |\v|).
>
 version 5.4
<
 gn and gN changed into ]# and [# what is more in a vim way. See |ftpdev-]#|
 and |ftpdev-[#|.

 :Edit, :Split, ... commands removed. Instead the |path| option is set so you
 can use |:find|, |:sfind|, ... commands.

>
 version 5.3
<
 See |ftpdev-:Eval|.

======
CONFIGURATION						*ftpdev-configure* 

							*ftpdev-g:ftplugin_dir*
There is one variable which needs to be configured >
 g:ftplugin_dir
< This is the directory which will be searched for files. If you set this to
your ~/.vim/ftplugin directory where you have lots of scripts this plugin
might be a bit slow. Each plugin that I develop has its own directory (you
probably use some version control system as I do) then this variable is set
in my vimrc file via an autocommand: >
	au BufEnter /plugin_dev_dir/*		let g:ftplugin=<plugin_dev_dir>
<
							*ftpdev-:PluginDir*
:PluginDir {dir}	
	This sets value of the variable |ftpdev-g:ftplugin_dir| to {dir}. It
	has dir type completion.

 							*ftpdev-g:ftplugin_ResetPath*
 |g:ftplugin_ResetPath| is set to 1 it will set |path|=g:ftplugin_dir, if not
 set or equal 0 it will add g:ftplugin_dir to |path| (only if the path already
 does not contain it). 
 This makes the use of |edit|, |split|, |vsplit|, |diffsplit| a lot nicer.

							*ftpdev-g:ftplugin_notinstall*
g:ftplugin_notinstall=['Makefile', '.*\.tar\.\%(bz2\|gz\)$', '.*\.vba$']
	This is list of patterns or file names relative to |g:ftplugin_dir|
	which will not be installed by |ftpdev-:Install| command.

							*ftpdev-g:ftplugin_installdir*
g:ftplugin_installdir=split(&runtimepath,",")[0]
	Directory name where to |ftpdev-:Install| files.


TIP ~

 It might be good idea to put in your vimrc file: >
     au BufEnter  {path_to_project_dir}/* source ~/.vim/ftplugin/vim_ftdev.vim
<In this way you will get access to |ftpdev-:Function|, |ftpdev-:Command|, ...
 commands even in files of other file type than "vim" (for example in "txt"
 files).

======
COMMANDS AND MAPS					*ftpdev*

SEARCHING COMMANDS ~
:Function[!] {fname} [line]				*ftpdev-:Function*
	This finds function with name matching {fname} vim pattern under the
	|ftpdev-g:ftplugin_dir| directory. It uses the internal grep, i.e.
	|vimgrep|. {fname} should be as the first argument of |vimgrep| except
	it doesn't have to be put between /.../ .

	{fname} should not begin with <SID> or 's:' even if the function name has
	it.

	The bang vimgrep is supplied with the j switch, i.e. only quick fix
	list will be filled with matches.

	There is a completion for {fname}s.

	If [line] is non zero, go [lines] below. This is especially useful
	when you are debugging a script and you got en error in function
	{fname} at line [line].

:ListFunctions						 *ftpdev-:ListFunctions*
	List functions in defined in the current buffer.

:Command[!] {cname} [line]				*ftpdev-:Command*
	This finds command which name matches {fname} vim pattern under the
	|ftpdev-g:ftplugin_dir| {cname> has the same syntax as {fname}. The
	bang works as in |ftpdev-:Function|

	There is a completion for {cname}s.
	The [line] argument is the same as in |ftpdev-:Function|.

:ListCommands						*ftpdev-:ListCommands*
	List commands in defined in the current buffer.

:Variable[!] {vname} [line]				*ftpdev-:Variable*
	This finds variable definition matching {vname}. {vname} has to contain
	the g: b: s: t: prefix if the variable has it. The bang works as in
	|ftpdev-:Function|
	The [line] argument is the same as in |ftpdev-:Function|.

:MapLhs[!] {maplhs} [line]				*ftpdev-:MapLhs*
	This finds maps which lhs matches {maplhs} vim pattern. The bang works as in
	|ftpdev-:Function|
	The [line] argument is the same as in |ftpdev-:Function|.

:MapRhs[!] {maprhs} [line]				*ftpdev-:MapRhs*
	This finds maps which rhs matches {maprhs} vim pattern. The bang works as in
	|ftpdev-:Function|
	The [line] argument is the same as in |ftpdev-:Function|.
							*ftpdev-]#*
							*ftpdev-[#*
							*ftpdev-:S*
:S /{pattern}/
map ]#
map [#
	This function make a search of {pattern} in the current function (it
	can wrap around the end of function. The argument {pattern} is a vim
	pattern passed to |vimgrep|.

	The pattern is added to search history and copied to the @/ register,
	thus you can re use it with |n| and |N| commands to search globally or
	gn and gN to search in the scope of current function.

	Note that you can first search with the vim standard |/| or |?| and
	then use |ftpdev-gn| and |ftpdev-gN|.

 							*ftpdev-:Eval*
:Eval
	Probably in your plugin there are debug |global-variables|. Then
	position the cursor on the begining of this variable :Eval will show
	you its value (if its defined). You can also use visual mode to select
	an expression, but the limitation is that every variable must be
	defined (thus it must be a global variable).

							*ftpdev-:Pgrep*
:Pgrep /{pattern}/[j][g]
	This makes |vimgrep| in all files under |ftpdev-g:ftplugin_dir|.  The
	argument syntax is the same as for |vimgrep|.

This note is just for completeness:
Vim has its own vim.vim ftplugin which defines: 
	]] 	(next beginning of a function), 
	][ 	(next end of a function), 
	[[ 	(previous beginning of a function), 
	[] 	(previous end of a function).
	
nmap Gn							*ftpdev-Gn*
nmap GN							*ftpdev-GN*
	Go to next/previous if/else/elseif/endif pair (this, unlike |n| and |N|
	vim maps, doesn't depend on v:searchforward). These maps are defined
	by: >
 nmap	Gn	:call searchpair('^[^"]*\<\zsif\>', '^[^"]*\<\zselse\%(if\)\=\>', '^[^"]*\<\zsendif\>')<CR>
 nmap	GN	:call searchpair('^[^"]*\<\zsif\>', '^[^"]*\<\zselse\%(if\)\=\>', '^[^"]*\<\zsendif\>', 'b')<CR>
<	

INSTALLING ~

:Install[!] 						*ftpdev-:Install*
	Without bang "!": it will copy the current buffer to the location
	under |g:ftplugin_installdir| be default it is first path that appear
	in 'runtimepath' vim option.  With bang "!": it will install all the
	files found under |g:ftplugin_dir| except the files in the
	(file/pattern) list |g:ftplugin_notinstall|.

	You can use this command in an autocommand for certain files: >
		au BufWritePost <some_file>	:Install

Happy vimming :)	

================================================================================
COPY RIGHTS						*ftpdev-copy-rights*


    Copyright (C) 2010 Marcin Szamotulski Permission is hereby granted to use
    and distribute this code, with or without modifications, provided that
    this copyright notice is copied with it. 

    FTPDEV filetype plugin for Vim is free software: you can redistribute it
    and/or modify it under the terms of the GNU General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.
 
    FTPDEV filetype plugin for Vim is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
    Public License for more details.
 
    You should have received a copy of the GNU General Public License along
    with FTPDEV filetype plugin for Vim.  If not, see <http://www.gnu.org/licenses/>.

    This licence applies to all files shipped with FTPDEV filetype plugin.


vim:tw=75:ts=8:ft=help:norl:ft=help
